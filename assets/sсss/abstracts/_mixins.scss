@use "variables" as *;
@use "breakpoints" as *;
@use "grid" as *;
@use "sass:meta";
@use "sass:math";
@use "sass:map";

// using media query with min-width
@mixin min-media($key) {
	$size: map-get($breakpoints, $key);
	@media only screen and (min-width: $size) {
		@content;
	}
}
// using media query with max-width
@mixin max-media($screen) {
	$screen: map-get($breakpoints-max, $screen);
	@media only screen and (max-width: $screen) {
		@content;
	}
}
// using widht & height properties
@mixin size($width, $height: $width) {
	width: $width;
	height: $height;
}
// using border-radius with prefixes
@mixin card-border($border) {
	-webkit-border-radius: none;
	-moz-border-radius: none;
	-ms-border-radius: none;
	border: none;
	border-radius: $border;
}
// using background property
@mixin background($dir) {
	background: url($dir) center center / contain no-repeat;
	@content;
}
// using background property vith fixed value
@mixin background-fixed($dir) {
	background: url($dir) center center / cover no-repeat;
	background-attachment: fixed;
}
// using ::before/::after properties
@mixin background-icon($dir, $clr) {
	content: url($dir);
	background-color: $clr;
}
// using position absolute with values
@mixin overlay($top, $right, $bottom, $left) {
	position: absolute;
	top: $top;
	right: $right;
	bottom: $bottom;
	left: $left;
	margin: auto;
}
@mixin grid-unit($span) {
	width: ($column-width * $span) + ($gutter-width * ($span - 1));
}
@mixin clearfix {
	&:before,
	&:after {
		content: "";
		display: table;
	}
	&:after {
		clear: both;
	} // For IE 6/7
	& {
		zoom: 1;
	}
}
